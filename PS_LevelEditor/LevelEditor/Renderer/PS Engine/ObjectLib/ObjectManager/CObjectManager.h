/////////////////////////////////////////////////////////////////////////////////////////////////////
// Class Name: CObjectManager
//
// Purpose: To manage all objects
//			-Creation
//			-Removal
//			-Add Components
//
// Original Author: Rueben Massey
//
// Creation Date: 5/8/2012
//
// Last Modification By:
// Last Modification Date:
/////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef COBJECTMANAGER_H_
#define COBJECTMANAGER_H_

#include <list>
#include "../Object Factory/CObjectFactory.h"
#include "../../ComponentManager/ComponentManager.h"
#include "../../PhysicsEnvironment/PhysicsEnvironment.h"
#include "../../Utilities/CollisionLib/CollisionShapes.h"


class IBaseObject;

__declspec(align(32))
class CObjectManager
{
private:

	static CObjectManager* m_pInstance;
	std::list<IBaseObject*> m_ObjectList;
	std::list<IBaseObject*> m_ItemList;
	std::list<IBaseObject*> ItemList() const { return m_ItemList; }
	void ItemList(std::list<IBaseObject*> val) { m_ItemList = val; }
	std::list<IBaseObject*> m_ObjectsToRemove;

	// The pointer to the player. Is maintained.
	IBaseObject* m_pPlayer;
	IBaseObject* m_pPlayerArm;
	//The pointer to the mesh effect. Will probably be deleted 
	IBaseObject* m_pEffect;

public:

	CObjectFactory		m_pObjectFactory;
	CComponentManager	m_pComponentManager;
	CPhysicsEnvironment m_PhysicsEnvironment;
	std::vector <AABB> m_AABBs;

private:
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	// Function Name: CObjectManager
	// Purpose: Default Constructor
	// Original Author: Josh Fields
	// Creation Date: 3/30/2012
	// Last Modification By:
	// Last Modification Date:
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	CObjectManager();

	/////////////////////////////////////////////////////////////////////////////////////////////////////
	// Function Name: ~CObjectManager
	// Purpose: Default Destructor
	// Original Author: Josh Fields
	// Creation Date: 3/30/2012
	// Last Modification By:
	// Last Modification Date:
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	~CObjectManager();
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	// Function Name: CObjectManager
	// Purpose: Default Copy Constructor
	// Original Author: Josh Fields
	// Creation Date: 3/30/2012
	// Last Modification By:
	// Last Modification Date:
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	CObjectManager( const CObjectManager& );

	/////////////////////////////////////////////////////////////////////////////////////////////////////
	// Function Name: operator =
	// Purpose: Default Assignment Operator
	// Original Author: Josh Fields
	// Creation Date: 3/30/2012
	// Last Modification By:
	// Last Modification Date:
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	CObjectManager& operator = ( const CObjectManager& );

public:

	/////////////////////////////
	//  Accessors
	/////////////////////////////
	IBaseObject* GetPlayer() { return m_pPlayer; }
	IBaseObject* GetPlayerArm() { return m_pPlayerArm; }
	std::list<IBaseObject*> GetItemList() const { return m_ItemList; }

	/////////////////////////////////////////////////////////////////////////////////////////////////////
	// Function Name: GetInstance
	// Purpose: Returns an instance.
	// Original Author: Josh Fields
	// Creation Date: 3/30/2012
	// Last Modification By:
	// Last Modification Date:
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	static CObjectManager* GetInstance ();

	/////////////////////////////////////////////////////////////////////////////////////////////////////
	// Function Name: DeleteInstance
	// Purpose: Deletes the instance.
	// Original Author: Josh Fields
	// Creation Date: 3/30/2012
	// Last Modification By:
	// Last Modification Date:
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	static void DeleteInstance ();

	/////////////////////////////////////////////////////////////////////////////////////////////////////
	// Function Name: Init
	// Purpose: Inits all information for ObjectManager
	// Original Author: Josh Fields
	// Creation Date: 3/30/2012
	// Last Modification By:
	// Last Modification Date:
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	void Init ();

	/////////////////////////////////////////////////////////////////////////////////////////////////////
	// Function Name: Shutdown
	// Purpose: Shuts down the ObjectManager
	// Original Author: Josh Fields
	// Creation Date: 3/30/2012
	// Last Modification By:
	// Last Modification Date:
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	void Shutdown ();
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	// Function Name: Update
	// Purpose: Updates all objects in the ObjectManager
	// Original Author: Josh Fields
	// Creation Date: 3/30/2012
	// Last Modification By:
	// Last Modification Date:
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	void Update ( float fElapsedTime );

	/////////////////////////////////////////////////////////////////////////////////////////////////////
	// Function Name: Render
	// Purpose: Class the render function of all of the objects.
	// Original Author: Ethan Pendergraft
	// Creation Date: 5/11/2012
	// Last Modification By:
	// Last Modification Date:
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	void Render();
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	// Function Name: AddObject
	// Purpose: Adds the object to the ObjectManager and adds a reference to that object
	// Original Author: Josh Fields
	// Creation Date: 3/30/2012
	// Last Modification By:
	// Last Modification Date:
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	IBaseObject* CreateObject ( eOBJECT_TYPE eType, D3DXMATRIX _ObjectMatrix, IBaseObject* _partner = nullptr );

	/////////////////////////////////////////////////////////////////////////////////////////////////////
	// Function Name: AddObject
	// Purpose: Creates a new object from the ObjectFactory and fills out the Objects CollisionVolume
	//			before adding it to the ObjectManager and then to the KD Tree.
	// Original Author: Josh Fields
	// Creation Date: 3/30/2012
	// Last Modification By:
	// Last Modification Date:
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	IBaseObject* AddObject ( CCollisionVolume* _pVolume, eOBJECT_TYPE eType);

	/////////////////////////////////////////////////////////////////////////////////////////////////////
	// Function Name: AddObjectToRemove
	// Purpose: Queues the Object to be removed after update.
	// Original Author: Andy Madruga
	// Creation Date: 5/17/2012
	// Last Modification By:
	// Last Modification Date:
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	void AddObjectToRemove ( IBaseObject* pObject);

	/////////////////////////////////////////////////////////////////////////////////////////////////////
	// Function Name: RemoveObject
	// Purpose: Removes the object from the ObjectManager and removes a reference to that object
	// Original Author: Josh Fields
	// Creation Date: 3/30/2012
	// Last Modification By:
	// Last Modification Date:
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	void RemoveObject ( IBaseObject* pObject);

	/////////////////////////////////////////////////////////////////////////////////////////////////////
	// Function Name: RemoveItem
	// Purpose: Removes the object from the ObjectManager and removes a reference to that object
	// Original Author: Rueben Massey
	// Creation Date: 5/15/2012
	// Last Modification By:
	// Last Modification Date:
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	void RemoveItem( IBaseObject* pObject);

	/////////////////////////////////////////////////////////////////////////////////////////////////////
	// Function Name: ClearAll
	// Purpose: Clears all objects from the ObjectManger and the references to thoses objects
	// Original Author: Josh Fields
	// Creation Date: 3/30/2012
	// Last Modification By:
	// Last Modification Date:
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	void ClearAll ();

	/////////////////////////////////////////////////////////////////////////////////////////////////////
	// Function Name: GetAllObjects
	// Purpose: Returns all objects
	// Original Author: Josh Fields
	// Creation Date: 3/30/2012
	// Last Modification By:
	// Last Modification Date:
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	std::list <IBaseObject*> GetAllObjects () { return m_ObjectList; }

	/////////////////////////////////////////////////////////////////////////////////////////////////////
	// Function Name: GetAllItems
	// Purpose: Returns all Items
	// Original Author: Rueben Massey
	// Creation Date: 5/15/2012
	// Last Modification By:
	// Last Modification Date:
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	std::list <IBaseObject*> GetAllItems() { return m_ItemList; }
};

#endif//COBJECTMANAGER_H_