//////////////////////////////////////////////////////////////////////////////////////
// Filename:	CComponent_Slime_Monster_AI.h
// Author:		Josh Fields
// Date:		5/24/12
// Purpose:		This class holds the information for the Slime Monster AI
//////////////////////////////////////////////////////////////////////////////////////
#ifndef CCOMPONENT_SLIME_MONSTER_AI_H
#define CCOMPONENT_SLIME_MONSTER_AI_H

#include "CComponent_AI.h"
#include "CComponent_Animation.h"

class CComponent_Sound;
class CComponent_SlimeMonsterCollision;

class CComponent_Slime_Monster_AI : public CComponent_AI
{
private:
	bool m_bHidden;
	bool m_bSneakAttack;
	bool m_bStuned;
	bool m_bMoveDirection;
	float m_fElapsedTime;
	int m_nPrevDirection;
	std::vector <CSceneObject*> m_vCurNearObjects;
	float m_fAttackTimer;
	float m_fJumpTimer;
	float m_fHideTimer;
	float m_fStunTimer;
	int m_nMaxLilGoos;
	int m_nActiveGoos;

	bool RotatedRight;
	bool RotatedLeft;

	CComponent_Sound* m_pSoundCmp;
	CComponent_SlimeMonsterCollision* m_pCollisionCmp;

	Sphere m_spPersonalSpace;

private:

	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// CComponent_Slime_Monster_AI():	Default Constructor
	//
	// Returns:		Void
	//
	// Mod. Name: JF
	// Mod. Date: 6/2/12
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void Attack ();

	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// CComponent_Slime_Monster_AI():	Default Constructor
	//
	// Returns:		Void
	//
	// Mod. Name: JF
	// Mod. Date: 6/2/12
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void Move ();

	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// CComponent_Slime_Monster_AI():	Default Constructor
	//
	// Returns:		Void
	//
	// Mod. Name: JF
	// Mod. Date: 6/2/12
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void Move (IBaseObject* _pTarget);

	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// CComponent_Slime_Monster_AI():	Default Constructor
	//
	// Returns:		Void
	//
	// Mod. Name: JF
	// Mod. Date: 6/2/12
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void Avoide (IBaseObject* _pHazard);

	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// CComponent_Slime_Monster_AI():	Default Constructor
	//
	// Returns:		Void
	//
	// Mod. Name: JF
	// Mod. Date: 6/2/12
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void Damaged ();

	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// CComponent_Slime_Monster_AI():	Default Constructor
	//
	// Returns:		Void
	//
	// Mod. Name: JF
	// Mod. Date: 6/2/12
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	bool SimulateMoveRight ();

	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// CComponent_Slime_Monster_AI():	Default Constructor
	//
	// Returns:		Void
	//
	// Mod. Name: JF
	// Mod. Date: 6/2/12
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	bool SimulateMoveLeft ();

	void SneakAttack ();

	bool CheckLineOfSight ();

	CComponent_Animation*	m_pAnimComponent;

public:
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// CComponent_Slime_Monster_AI():	Default Constructor
	//
	// Returns:		Void
	//
	// Mod. Name: JF
	// Mod. Date: 6/2/12
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	CComponent_Slime_Monster_AI ();

	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// ~CComponent_Slime_Monster_AI():	Default Destructor
	//
	// Returns:		Void
	//
	// Mod. Name: JF
	// Mod. Date: 6/2/12
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	~CComponent_Slime_Monster_AI ();

	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Initialize():	Inits slime monster AI information
	//
	// Returns:		bool
	//
	// Mod. Name: JF
	// Mod. Date: 6/2/12
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	bool Initialize ();

	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Shutdown():	shutdowns the slime monster AI
	//
	// Returns:		Void
	//
	// Mod. Name: JF
	// Mod. Date: 6/2/12
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void Shutdown ();

	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Update(float _fElapsedTime):	updates the slime monster so he moves around the level or attacks the player.
	//
	// Returns:		Void
	//
	// Mod. Name: JF
	// Mod. Date: 6/2/12
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void Update ( float _fElapsedTime );

	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Damage():	Default Constructor
	//
	// Returns:		Void
	//
	// Mod. Name: JF
	// Mod. Date: 6/2/12
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void Damage (float _fDamageAmount);

	int GetActiveEnemies () { return m_nActiveGoos; }
	void SetActiveEnemies ( int _nActiveEnemeies ) { m_nActiveGoos = _nActiveEnemeies; }
};
#endif