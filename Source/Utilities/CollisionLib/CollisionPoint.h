//////////////////////////////////////////////////////////////////////////////////////
// Filename:	CollisionPoint.h
// Author:		Josh Fields
// Date:		5/24/12
// Purpose:		This class holds on to the information of a 2D and 3D point.
//				All 2D points ingore the Z axis
//////////////////////////////////////////////////////////////////////////////////////
#ifndef CollisionPoint_H
#define CollisionPoint_H

#include "CollisionVolume.h"
#include "../MathLib/vec2.h"
#include "../MathLib/vec3.h"

class CCollisionPoint : public CCollisionVolume
{
protected:
	vec2f m_v2Centorid;
	vec3f m_v3Centorid;

public:
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// CCollisionPoint():	Default Constructor
	//
	// Returns:		Void
	//
	// Mod. Name:
	// Mod. Date:
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	CCollisionPoint ();

	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// ~CCollisionPoint():	Default Destructor
	//
	// Returns:		Void
	//
	// Mod. Name:
	// Mod. Date:
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	~CCollisionPoint ();

	/////////////////////////////
	//  Accessors
	/////////////////////////////
	vec2f Get2DCentorid () { return m_v2Centorid; }
	vec3f Get3DCentorid () { return m_v3Centorid; }

	/////////////////////////////
	//  Mutators
	/////////////////////////////
	void Set2DCentorid ( vec2f _v2Centorid );
	void Set3DCentorid ( vec3f _v3Centorid );
};
#endif